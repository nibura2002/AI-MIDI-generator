name: Deploy to Cloud Run

on:
  push:
    branches:
      - main  # Trigger when a push is made to the main branch

jobs:
  build-and-deploy:
    name: Build and Deploy to Cloud Run
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Authenticate to Google Cloud using the service account key from secrets
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # Set up the Google Cloud SDK (project is specified; authentication was handled above)
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # Configure Docker to authenticate with Artifact Registry
      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet

      # Build the Docker image with a unique tag based on the commit SHA
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/midi-repo/midi-generation:${{ github.sha }} .

      # Push the Docker image to Artifact Registry
      - name: Push Docker image
        run: |
          docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/midi-repo/midi-generation:${{ github.sha }}

      # Deploy the pushed image to Cloud Run and set required environment variables
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy midi-generation \
            --image ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/midi-repo/midi-generation:${{ github.sha }} \
            --region ${{ secrets.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
            --min-instances=1